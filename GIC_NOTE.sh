#!/bin/gvim

						<==> <==> V2.0 <==> <==>

GICD_TYPER:
	[4:0] gic support interrupts line number.  = (N + 1) * 32
	[7:5] CPU interfaces number. = (N + 1)

GICD_ISENABLERn:
	indicate what interrupt IDs supported.

GICD_ICENABLERn:
	interrupt enable.

GICD_ISPENDRn:
	indicate which interrupt set-Pending supported.

GICD_ICPENDRn:
	(read)wheather the interrupt is Pending and (write) change status.

GICD_IGROUNPRn:
	configure interrupts as Group0 or Group1.

GICD_CTLR:
	forward to CPU enable.
	[0]: Group0 forward enable.
	[1]: Group1 forward enable.

GICD_SGIR:
	[25:24] Determines how the distributor must process the requested SGI ( self,!self ,CPU target list)
	[23:16] CPU target list
	[15]    forward CPU Group0 & Group1
	[3:0]   interrupt ID(0-15)

#############################################################################################

GICC_IAR(GICC_INTACK):
	[9:0]   interrupt ID
	[12:10]  N means the request was generated by a write to the GICD_SGIR on CPU interface N

GICC_EOIR(end of interrupt):

GICC_CTLR:
	enable.

GICC_DIR:
	deactivate interrupt.
	[0:9] interrupt IDs
	[10:12] CPUID

Group:
	@ signaling (Group 0) interrupts to the target processor using (either the IRQ or
the FIQ exception) request.
	@ signaling (Group 1) interrupts to the target processor using the (IRQ
exception request only).

interrupt type:
	SGI (0  - 15)
	PPI (16 - 31)
	SPI (32 - MAX)








				<==> <==> V3.0 <==> <==>

edge-trigger & level-sensitive:
 	          	   	       			   active ----
edge-trigger --->	        		 /
             		 Pending   .... /

									    ---- Pending & active
level-sensitive  --->				  /
						Pending .... /

Group:
(current EX-L)              	(G0)          (G1)
									       	  / \
									       (SEC) (NON)
	Secure EL1 or EL0      		FIQ         IRQ   FIQ
	Non-Secure EL1 or EL0      	FIQ         FIQ   IRQ
	Non-Secure EL2		   		FIQ         FIQ   IRQ
	Secure EL3 		     		FIQ         FIQ   FIQ


(SPI) supported for. generated by write reg.

	• A Group 0 physical interrupt:
		— ARM expects these interrupts to be handled at EL3.
	• A Secure Group 1 physical interrupt:
		— ARM expects these interrupts to be handled at Secure EL1.
	• A Non-secure Group 1 physical interrupt:
		— ARM expects these interrupts to be handled at Non-secure EL2 in. systems using virtualization, or at
	Non-secure EL1 in. systems not using virtualization



Affinity routing:
	• 	An asymmetric configuration, where affinity routing is (enabled for.
	Non-secure state) and (disabled for. Secure state). This provides support
	for. a Secure legacy environment.
	• 	A legacy-only environment where affinity routing is disabled for. both
	Secure state and Non-secure state.

==> (GICD_**)

GICD_CTLR:
	ARE_(S/NS):  Affinity Routing Enable
	A3V       :  four level or three level of affinity are implemented
	DS        :
		0 - two Security state( Secure & Non-secure); three interrupt Groups( Group0 & Secure Group1 & Non-secure Group1);
		1 - one Security state only(Secure or Non-Secure); two Groups(Group0 & Group1)

	EnableGrpX:  distribution interrupt enable



GICD_IROUTER<n>(n = 32 - 1019):
	(SPI) Routing;

GICD_IGRPMODR<n>:

GICD_IGROUPR<n>:

GICD_ISENABLER<n>:
GICD_ICENABLER<n>:
	PPI&SPI&SGI can be enabled and disable
	(PPI & SGIs) can also be enabled and disabled by writing to
	(GICR_ISENABLER0) and (GICR_ICENABLER0) when affinity routing is enabled


==> (ICC_**)

 --- ICC_(A)SGI1R_EL1:
|   Generates Group 1 SGIs for. the Security state that is not the current Security state.
*	This register allows software executing in. a Secure state to generate Non-secure Group 1 SGIs.
*   It will also allow software executing in. a Non-secure state to generate Secure Group 1 SGIs.
|
 --- ICC_SGI1R_EL1:
	Generates Group 1 SGIs for. the current Security state.
	(SGI) Routing;

ICC_SRE_ELx.SRE:
	system register accessed enable.


ICC_IAR(0/1)_EL1:
	Get INTID for. Group(0/1)

ICC_IGRPRN(0/1)_EL1:
	Enable: Group interrupt enable.

==> (GICR_**)

GICR_IGROUPR0:

GICR_IGRPMODR0:

* (When GICD_CTLR.ARE_S == 0 or GICD_CTLR.DS == 1, the GICD_IGRPMODR<n> registers are RES 0)
